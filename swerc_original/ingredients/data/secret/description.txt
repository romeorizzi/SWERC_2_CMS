test 0: the example in the problem should give the same output
test 1: a budget of 0 should give output 0, no matter how many dishes
test 2: 0 recipes should give output 0, no matter how big the budget
test 3: for several dishes, the optimal should be chosen (also breaking ties)
test 4: greedy algorithm choice should not be optimal
test 5: multiple possibilities with max prestige should select the one having
        minimal cost
test 6: big random instance
test 7: random instance at the limit

current "big" tests:
5: 200000 recipes from 500 dishes, budget of 7500, string
size 20, cost and prestige range 10000
  - time for python implementation: 0.009 (pypy+DAG) 0.435 (pypy+dijkstra), 0.267 (pypy+greedy)
6: 1000000 recipes from 1500 dishes with a budget of 10000,
string size 20, cost and prestige range 10000
  - time for python implementation: 0.820 (pypy+DAG) 3.399 (pypy+dijkstra), 2.706 (pypy+greedy),  

rest of the tests have millisecond response times on pypy
